/*
 * Copyright (c) 2021 Nick Winans
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h> // USB is Default
// #include <dt-bindings/zmk/rgb.h>

// Layer definitions. Order determines how transparency passes.
#define DEFAULT 0
#define QWERTY  1
#define FUNC    2

/ {
	behaviors {
		// Set the `~ key to act as escape when modified by left control key.
        grtlesc: grave_tilde_escape {
            compatible = "zmk,behavior-mod-morph";
            label = "GRAVE_TILDE_ESCAPE";
            #binding-cells = <0>; // First key definition in keymaps, ie esc in this case
            bindings = <&kp GRAVE>, <&kp ESC>;
            mods = <MOD_LCTL>;
        };
    };

	keymap {
		compatible = "zmk,keymap";

		// Colemak Mod-DH Layout
		// ------------------------------------------------------------------------------------------
		// | GTE |  1  |  2  |  3  |  4  |  5  |  6  |  7  |  8  |  9  |  0  |  -  |  =  |   BKSP   |
		// | TAB  |  Q  |  W  |  F  |  P  |  B  |  J  |  L  |  U  |  Y  |  ;  |  [  |  ]  |   "|"   |
		// | CAPS  |  A  |  R  |  S  |  T  |  G  |  M  |  N  |  E  |  I  |  O  |  '  |     ENTER    |
		// | LSHIFT  |  Z  |  X  |  C  |  D  |  V  |  K  |  H  |  ,  |  .  |  /  |     RSHIFT       |
		// | LCTRL | META  | LALT  |            SPACE             |  RALT  |  FUNC  | C_MENU |RCTRL |
		// ------------------------------------------------------------------------------------------
		default_layer {
			bindings = <
				&grtlesc            &kp N1          &kp N2          &kp N3          &kp N4          &kp N5          &kp N6          &kp N7          &kp N8          &kp N9          &kp N0         &kp MINUS       &kp EQUAL        &kp BSPC
				&kp TAB             &kp Q           &kp W           &kp F           &kp P           &kp B           &kp J           &kp L           &kp U           &kp Y           &kp SEMI       &kp LBKT        &kp RBKT         &kp BSLH
				&kp CLCK            &kp A           &kp R           &kp S           &kp T           &kp G           &kp M           &kp N           &kp E           &kp I           &kp O          &kp APOS                         &kp ENTER
				&kp LSHFT           &kp Z           &kp X           &kp C           &kp D           &kp V           &kp K           &kp H           &kp COMMA       &kp DOT         &kp FSLH                                        &kp RSHFT
				&kp LCTRL           &kp LMETA       &kp LALT                                        &kp SPACE                       &kp RALT        &mo FUNC        &kp K_CMENU                                                     &kp RCTRL
			>;
		};

		// QWERTY toggle for convenience (such as another user borrowing the board).
		// Layer transparency should allow all other keys to pass through to the default layer.
		// Momentary Layer FUNC hardcoded (Should always be present)
		// ------------------------------------------------------------------------------------------
		// |     |     |     |     |     |     |     |     |     |     |     |     |     |          |
		// |      |  Q  |  W  |  E  |  R  |  T  |  Y  |  U  |  I  |  O  |  P  |     |     |         |
		// |       |  A  |  S  |  D  |  F  |  G  |  H  |  J  |  K  |  L  |  ;  |     |              |
		// |         |  Z  |  X  |  C  |  V  |  B  |  N  |  M  |     |     |     |                  |
		// |       |       |       |                              |        |  FUNC  |        |      |
		// ------------------------------------------------------------------------------------------
		qwerty_layer {
			bindings = <
				&trans              &trans          &trans          &trans          &trans          &trans          &trans          &trans          &trans          &trans          &trans         &trans          &trans           &trans
				&trans              &kp Q           &kp W           &kp F           &kp P           &kp T           &kp Y           &kp U           &kp I           &kp O           &kp P          &trans          &trans           &trans
				&trans              &kp A           &kp S           &kp D           &kp F           &kp G           &kp H           &kp J           &kp K           &kp L           &kp SEMI       &trans                           &trans
				&trans              &kp Z           &kp X           &kp C           &kp V           &kp B           &kp N           &kp M           &trans          &trans          &trans                                          &trans
				&trans              &trans          &trans                                          &trans                          &trans          &mo FUNC        &trans                                                          &trans
			>;
		};

		/**
		* func_layer will eventually have keys assigned for RGB underglow settings for the nice!60. Mainly want lights to change based on modifiers or layer adjustments for visual confirmation.		
		*/
		// Function Layer for BLE functionality, FKeys, Nav Keys and some conveince keys.
		// Right-hand mods and keys are transparent, but all others are disabled.
		// Momentary Layer FUNC hardcoded (Should always be present)
		// ------------------------------------------------------------------------------------------
		// | BTC |  F1 |  F2 |  F3 |  F4 |  F5 |  F6 |  F7 |  F8 |  F9 | F10 | F11 | F12 |          |
		// | BT 1 | V_U | B_D |  ↑  | B_U |     |     |     |PSCRN|SLCK |BREAK|     |     |         |
		// | BT 2  | V_D |  ←  |  ↓  |  →  |     |     |     | INS | HOM | PG↑ |     |              |
		// | BT 3    | V_M | NXT | PPL | PRV |     |     |     | DEL | END | PG↓ |                  |
		// | BT 4  | BT 5  | BT TG |                              | QWERTY |  FUNC  |        |      |
		// ------------------------------------------------------------------------------------------
		func_layer {
			bindings = <
				&bt BT_CLR          &kp F1          &kp F2          &kp F3          &kp F4          &kp F5          &kp F6          &kp F7          &kp F8          &kp F9          &kp F10         &kp F11         &kp F12         &trans 
				&bt BT_SEL 0        &kp C_VOL_UP    &kp C_BRI_DN    &kp UP          &kp C_BRI_UP    &none           &none           &none           &kp PSCRN       &kp SLCK        &kp PAUSE_BREAK &none           &none           &trans 
				&bt BT_SEL 1        &kp C_VOL_DN    &kp LEFT        &kp DOWN        &kp RIGHT       &none           &none           &none           &kp INS         &kp HOME        &kp PG_UP       &none                           &trans 
				&bt BT_SEL 2        &kp C_MUTE      &kp C_NEXT      &kp C_PP        &kp C_PREV      &none           &none           &none           &kp DEL         &kp END         &kp PG_DN                                       &trans 
				&bt BT_SEL 3        &bt BT_SEL 5    &out OUT_TOG                                    &none                           &tog QWERTY     &mo FUNC        &none                                                           &trans 
			>;
		};
	};
};
